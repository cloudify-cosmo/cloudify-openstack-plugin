version: 2.1

checkout:
  post:
    - >
      if [ -n "$CI_PULL_REQUEST" ]; then
        PR_ID=${CI_PULL_REQUEST##*/}
        git fetch origin +refs/pull/$PR_ID/merge:
        git checkout -qf FETCH_HEAD
      fi


executors:
  py27:
    docker:
      - image: circleci/python:2.7

  py36:
    docker:
      - image: circleci/python:3.6

  wagon_generator:
    machine:
      image: ubuntu-1604:201903-01

  cloudify-machine:
    machine:
      image: ubuntu-1604:201903-01

  cloudify-machine-510:
    machine:
      image: ubuntu-1604:201903-01

commands:
  run_unittest:
    steps:
      - checkout
      - run:
          name: install tox
          command: pip install --user tox
      - run:
          name: Run Flake8
          command: /home/circleci/.local/bin/tox -e flake8
      - run:
         name: Run nosetest
         command: /home/circleci/.local/bin/tox -e nosetests

  check_py3_compat:
    steps:
      - run:
          name: install futurize
          command: pip install future --user
      - run:
          name: remove compat module
          command: rm openstack_sdk/_compat.py
      - run:
          name: find python3-incompatible code
          command: |
            FUTURIZE="futurize ."
            while read line; do
              [[ "$line" =~ ^#.* ]] && continue
              FUTURIZE="${FUTURIZE} ${line}"
            done<.circleci/py3fixers
            echo "Running: $FUTURIZE"
            $FUTURIZE>futurize_diffs
      - run:
          name: check that there is no python3-incompatible code
          command: |
            if [[ -s futurize_diffs ]]; then
              echo "Python-3-incompatible code found"
              cat futurize_diffs
              exit 1
            fi

  generate_py27py36_wagon:
    steps:
      - run:
          name: Create Workspace Build directory.
          command: mkdir -p workspace/build
      - run:
          name: Build py27py36 Wagon
          command: |
              git clone https://github.com/cloudify-cosmo/cloudify-wagon-build-containers.git
              docker build -t cloudify-centos-7-wagon-builder cloudify-wagon-build-containers/centos_7_py2py3
              docker run -v ~/project/:/packaging cloudify-centos-7-wagon-builder
      - run:
          name: copy wagon to workspace
          command: cp *.wgn workspace/build/
      - persist_to_workspace:
          root: workspace
          paths:
            - build/*

  generate_rhel_py27py36_wagon:
    steps:
      - run:
          name: Create Workspace Build directory.
          command: mkdir -p workspace/build
      - run:
          name: Build RHEL py27py36 Wagon
          command: |
              git clone https://github.com/cloudify-cosmo/cloudify-wagon-build-containers.git
              docker build -t cloudify-redhat-7-wagon-builder cloudify-wagon-build-containers/redhat_7_py2py3 --build-arg USERNAME="$USERNAME" --build-arg PASSWORD="$PASSWORD"
              docker run -v ~/project/:/packaging cloudify-redhat-7-wagon-builder
      - run:
          name: copy wagon to workspace
          command: cp *.wgn workspace/build/
      - persist_to_workspace:
          root: workspace
          paths:
            - build/*


  build_archive:
    steps:
      - attach_workspace:
          at: workspace
      - run:
          name: Create Workspace Build directory.
          command: mkdir -p workspace/build
      - run:
          name: Build Bundle
          command: |
              git clone https://github.com/cloudify-incubator/cloudify-ecosystem-test.git
              pip install -e cloudify-ecosystem-test
              python -c 'from ecosystem_cicd_tools import packaging; packaging.build_plugins_bundle_with_workspace()'
      - persist_to_workspace:
          root: workspace
          paths:
            - build/*

  run_integration_tests_505:
    steps:
      - run:
          name: "Pull Submodules"
          command: |
            git submodule init
            git submodule update --remote --recursive
      - attach_workspace:
          at: workspace
      - run:
          name: update pip
          command: pip install -U pip
      - run:
          name: install cloudify
          command: |
            pip install -r test-requirements.txt
      - run:
          name: download manager docker image
          command: wget http://repository.cloudifysource.org/cloudify/5.0.5/ga-release/cloudify-docker-manager-5.0.5.tar
      - run:
          name: load docker image
          command: docker load -i cloudify-docker-manager-5.0.5.tar
      - run:
          name: retain space by dumping the tar
          command: rm cloudify-docker-manager-5.0.5.tar
      - run:
          name: show images
          command: docker images
      - run:
          name: start docker container
          command: docker run --name cfy_manager -d --restart unless-stopped -v /sys/fs/cgroup:/sys/fs/cgroup:ro --tmpfs /run --tmpfs /run/lock --security-opt seccomp:unconfined --cap-add SYS_ADMIN --network host cloudifyplatform/premium-cloudify-manager-aio
      - run:
          name: install local project
          command: pip install https://github.com/cloudify-incubator/cloudify-ecosystem-test/archive/latest.zip
      - run: pytest -s .circleci/test_examples.py

  run_integration_tests_510:
    steps:
      - run:
          name: "Pull Submodules"
          command: |
            git submodule update --init --recursive --remote
      - attach_workspace:
          at: workspace
      - run:
          name: update pip
          command: pip install -U pip
      - run:
          name: install cloudify
          command: |
            pip install -r test-requirements.txt
      - run:
          name: download manager docker image
          command:  wget http://repository.cloudifysource.org/cloudify/5.1.0/.dev1-release/cloudify-manager-aio-docker-5.1.0.dev1.tar
      - run:
          name: load docker image
          command: docker load -i cloudify-manager-aio-docker-5.1.0.dev1.tar
      - run:
          name: retain space by dumping the tar
          command: rm cloudify-manager-aio-docker-5.1.0.dev1.tar
      - run:
          name: show images
          command: docker images
      - run:
          name: start docker container
          command: docker run --name cfy_manager -d --restart unless-stopped -v /sys/fs/cgroup:/sys/fs/cgroup:ro --tmpfs /run --tmpfs /run/lock --security-opt seccomp:unconfined --cap-add SYS_ADMIN --network host cloudify-manager-aio:latest
      - run:
          name: install local project
          command: pip install https://github.com/cloudify-incubator/cloudify-ecosystem-test/archive/latest.zip
      - run: pytest -s .circleci/test_examples.py

  release_plugin:
    steps:
      - run:
          name: "Pull Submodules"
          command: |
            git submodule update --remote --recursive
      - run:
          name: Download pip
          command: curl "https://bootstrap.pypa.io/get-pip.py" -o "get-pip.py"
      - run:
          name: Install pip
          command: sudo python get-pip.py
      - run:
          name: Install virtualenv
          command: pip install --user virtualenv
      - run:
          name: Init virtualenv
          command: virtualenv env
      - run:
          name: install tox
          command: pip install --user pygithub pyyaml==3.10
      - run:
          name: upgrade setuptools
          command: pip install --upgrade setuptools
      - run:
          name: install local project
          command: pip install https://github.com/cloudify-incubator/cloudify-ecosystem-test/archive/latest.zip
      - attach_workspace:
          at: workspace
      - run: python .circleci/package_release.py

jobs:

  unittests_py27:
    executor: py27
    steps:
      - run_unittest

  unittests_py36:
    executor: py36
    steps:
      - run_unittest

  py3_compat:
    executor: py27
    steps:
      - checkout
      - check_py3_compat

  wagon:
    executor: wagon_generator
    steps:
      - checkout
      - generate_py27py36_wagon

  rhel_wagon:
    executor: wagon_generator
    steps:
      - checkout
      - generate_rhel_py27py36_wagon
  
  integration_tests_505:
    executor: cloudify-machine
    environment:
      CLOUDIFY_SSL_TRUST_ALL: true
      IAAS: openstack
      TEST_NAME: cloudformation
    steps:
      - checkout
      - run_integration_tests_505

  integration_tests_510:
    executor: cloudify-machine-510
    environment:
      CLOUDIFY_SSL_TRUST_ALL: true
      IAAS: openstack
    steps:
      - checkout
      - run_integration_tests_510

  build_bundle:
    executor: wagon_generator
    steps:
      - checkout
      - build_archive

  release:
    executor: py27
    steps:
      - checkout
      - release_plugin

workflows:
  version: 2
  tests:
    jobs: 
      - py3_compat
      - unittests_py27
      - unittests_py36:
          requires:
            - py3_compat
      - wagon:
          filters:
            branches:
              only: /([0-9\.]*\-build|master)/
      - rhel_wagon:
          filters:
            branches:
              only: /([0-9\.]*\-build|master)/
      - build_bundle:
          filters:
            branches:
              only: /([0-9\.]*\-build|master)/
          requires:
            - wagon
            - rhel_wagon
      - integration_tests_505:
          requires:
            - unittests_py27
            - build_bundle
          filters:
            branches:
              only: /([0-9\.]*\-build|master)/
      - integration_tests_510:
          requires:
            - unittests_py36
            - build_bundle
          filters:
            branches:
              only: /([0-9\.]*\-build|master)/
      - release:
          filters:
            branches:
              only: /([0-9\.]*\-build|master)/
          requires:
            - integration_tests_505
            - integration_tests_510

  nightly:
    triggers:
    - schedule:
        cron: "0 3 * * *"
        filters:
          branches:
            only: /2.14.21-build|master)/
    jobs:
      - py3_compat
      - unittests_py27
      - unittests_py36
      - wagon:
          filters:
            branches:
              only: /([0-9\.]*\-build|master|dev)/
      - rhel_wagon:
          filters:
            branches:
              only: /([0-9\.]*\-build|master|dev)/
      - integration_tests_505:
          requires:
            - wagon
            - rhel_wagon
          filters:
            branches:
              only: /([0-9\.]*\-build|master|dev)/
      - integration_tests_510:
          requires:
            - wagon
            - rhel_wagon
          filters:
            branches:
              only: /([0-9\.]*\-build|master|dev)/
